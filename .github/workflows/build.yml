# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [ pull_request, push, workflow_dispatch ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        
      - name: 清理空间
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set +e
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/mysql \
          /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
 
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v3
      - name: setup jdk 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build 1.17
        run: ./gradlew :v1_17:build
      - name: build 1.18
        run: ./gradlew :v1_18:build
      - name: build 1.19
        run: ./gradlew :v1_19:build
      - name: build 1.19.3
        run: ./gradlew :v1_19_3:build
      - name: build 1.20.1
        run: ./gradlew :v1_20:build
     
      - name: 捕获生成工件
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: ./**/build/libs/*.jar
          
      - name: 生成发布标签
        id: tag
        if: true && !failure() && !cancelled()
        run: |
          echo "{release_tag}={{$(date +"%Y.%m.%d-%H%M")}" >> "$GITHUB_OUTPUT"
          echo "{status}={success}" >> "$GITHUB_OUTPUT"          
        
      - name: 上传固件以发布
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: OpenWrt_firmware${{ env.DEVICE_NAME }}
          files: ${{ env.FIRMWARE }}/*
  
          asset_path: ./**/build/libs/*.jar
